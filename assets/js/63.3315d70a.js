(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{377:function(e,t,_){"use strict";_.r(t);var a=_(3),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"oauth2-0-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oauth2-0-基本概念"}},[e._v("#")]),e._v(" oAuth2.0 基本概念")]),e._v(" "),t("h1",{attrs:{id:"简单理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单理解"}},[e._v("#")]),e._v(" 简单理解")]),e._v(" "),t("p",[t("strong",[e._v("OAuth 就是一种授权机制。数据的所有者告诉系统，同意授权第三方应用进入系统，获取这些数据。系统从而产生一个短期的进入令牌（token），用来代替密码，供第三方应用使用。")])]),e._v(" "),t("p",[e._v("就好比电子密码锁, 我自己设置密码后, 如果需要其他人临时开门怎么办? 如果我给他密码那就很不安全, 后期还要修改比较麻烦, 可能还会影响家人的使用.")]),e._v(" "),t("p",[e._v("这种情况我们就可以使用授权机制:")]),e._v(" "),t("ol",[t("li",[e._v("如果临时开门, 那么就需要他像我申请")]),e._v(" "),t("li",[e._v("我同意后, 电子锁生成一个临时密码给他,")]),e._v(" "),t("li",[e._v("有这个临时密码后, 便可以进入")])]),e._v(" "),t("p",[t("strong",[e._v("令牌和密码的区别:")])]),e._v(" "),t("ol",[t("li",[e._v("令牌是短期临时的, 到期会失效, 无法修改. 密码长期有效, 除非用户修改")]),e._v(" "),t("li",[e._v("令牌可以被所有者撤销. 密码一般不允许被其他人撤销")]),e._v(" "),t("li",[e._v("令牌有权限范围, 而密码的权限更完整")])]),e._v(" "),t("h1",{attrs:{id:"oauth-2-0-的四种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oauth-2-0-的四种方式"}},[e._v("#")]),e._v(" OAuth 2.0 的四种方式")]),e._v(" "),t("h2",{attrs:{id:"rfc-6749"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rfc-6749"}},[e._v("#")]),e._v(" RFC 6749")]),e._v(" "),t("p",[e._v("OAuth 2.0的标准是 REF 6749 文件. 该文件先解释了OAuth是什么")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("OAuth引入了一个授权层, 用来分离两种不同的角色: 客户端和资源所有者. 资源所有者同意后, 资源服务器可以向客户端颁发令牌. 客户端通过令牌,去请求数据\n")])])]),t("p",[e._v("OAuth的核心就是想第三方应用办法令牌.")]),e._v(" "),t("p",[e._v("OAuth 2.0 规定了四种获得令牌的流程.")]),e._v(" "),t("ol",[t("li",[e._v("授权码 (authorization-code)")]),e._v(" "),t("li",[e._v("隐藏式（implicit）")]),e._v(" "),t("li",[e._v("密码式（password）")]),e._v(" "),t("li",[e._v("客户端凭证（client credentials）")])]),e._v(" "),t("h2",{attrs:{id:"授权码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#授权码"}},[e._v("#")]),e._v(" 授权码")]),e._v(" "),t("p",[e._v("授权码方式, 指的是第三方应用先申请一个授权码. 然后用该码获取令牌.")]),e._v(" "),t("p",[e._v("这种方式是最常见的流程, 安全性也最高, 它适用于有后端的web应用. 授权码通过前端传送, 令牌则是存储在后端, 而且所有源资源服务器的通信都在后端完成. 这样的前后端分离, 可以避免令牌泄露.")]),e._v(" "),t("p",[e._v("第一步, A网站提供链接需要跳转到B, 授权用户数据给A使用")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://b.com/oauth/authorize?  response_type=code&  client_id=CLIENT_ID&  redirect_uri=CALLBACK_URL&  scope=read\n")])])]),t("p",[e._v("URL中, "),t("code",[e._v("response_type")]),e._v("参数表示要求返回授权码（"),t("code",[e._v("code")]),e._v("），"),t("code",[e._v("client_id")]),e._v("参数让 B 知道是谁在请求，"),t("code",[e._v("redirect_uri")]),e._v("参数是 B 接受或拒绝请求后的跳转网址，"),t("code",[e._v("scope")]),e._v("参数表示要求的授权范围（这里是只读）")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/other/image-fe495e8d2c43460195885a1af21902a3.png",alt:"/img/other/image-fe495e8d2c43460195885a1af21902a3.png"}})]),e._v(" "),t("p",[e._v("image.png")]),e._v(" "),t("p",[e._v("第二步, 用户跳转后, B进行身份登录验证后, 询问是否给A授权. 用户同意便会跳回"),t("code",[e._v("redirect_uri")]),e._v("参数执行的网址, 并传回一个授权码")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://a.com/callback?code=AUTHORIZATION_CODE\n")])])]),t("p",[e._v("code参数就是授权码")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/other/image-21cf03dfe8144185b688649ea55084a7.png",alt:"/img/other/image-21cf03dfe8144185b688649ea55084a7.png"}})]),e._v(" "),t("p",[e._v("image.png")]),e._v(" "),t("p",[e._v("第三步, A拿到授权码之后, 便可以在后端向B网站请求令牌")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://b.com/oauth/token? client_id=CLIENT_ID& client_secret=CLIENT_SECRET& grant_type=authorization_code& code=AUTHORIZATION_CODE& redirect_uri=CALLBACK_URL\n")])])]),t("p",[e._v("上面 URL 中，"),t("code",[e._v("client_id")]),e._v("参数和"),t("code",[e._v("client_secret")]),e._v("参数用来让 B 确认 A 的身份（"),t("code",[e._v("client_secret")]),e._v("参数是保密的，因此只能在后端发请求），"),t("code",[e._v("grant_type")]),e._v("参数的值是"),t("code",[e._v("AUTHORIZATION_CODE")]),e._v("，表示采用的授权方式是授权码，"),t("code",[e._v("code")]),e._v("参数是上一步拿到的授权码，"),t("code",[e._v("redirect_uri")]),e._v("参数是令牌颁发后的回调网址。")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/other/image-949059fe925f4f5888f0cd8cf6062498.png",alt:"/img/other/image-949059fe925f4f5888f0cd8cf6062498.png"}})]),e._v(" "),t("p",[e._v("image.png")]),e._v(" "),t("p",[e._v("第四步, B收到授权码后, 就会办法令牌 . 具体做法是向"),t("code",[e._v("redirect_uri")]),e._v("指定的网址，发送一段 JSON 数据。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{  "access_token":"ACCESS_TOKEN",  "token_type":"bearer",  "expires_in":2592000,  "refresh_token":"REFRESH_TOKEN",  "scope":"read",  "uid":100101,  "info":{...}}\n')])])]),t("p",[e._v("上面 JSON 数据中，"),t("code",[e._v("access_token")]),e._v("字段就是令牌，A 网站在后端拿到了。")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/other/image-3cec10c54091453785c76eaf0f5fff45.png",alt:"/img/other/image-3cec10c54091453785c76eaf0f5fff45.png"}})]),e._v(" "),t("p",[e._v("image.png")]),e._v(" "),t("h2",{attrs:{id:"隐藏式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#隐藏式"}},[e._v("#")]),e._v(" 隐藏式")]),e._v(" "),t("p",[e._v("有些 Web 应用是纯前端应用，没有后端。这时就不能用上面的方式了，必须将令牌储存在前端。"),t("strong",[e._v("RFC 6749 就规定了第二种方式，允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）“隐藏式”（implicit）。")])]),e._v(" "),t("p",[e._v("第一步，A 网站提供一个链接，要求用户跳转到 B 网站，授权用户数据给 A 网站使用。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://b.com/oauth/authorize?  response_type=token&  client_id=CLIENT_ID&  redirect_uri=CALLBACK_URL&  scope=read\n")])])]),t("p",[e._v("上面 URL 中，"),t("code",[e._v("response_type")]),e._v("参数为"),t("code",[e._v("token")]),e._v("，表示要求直接返回令牌。")]),e._v(" "),t("p",[e._v("第二步，用户跳转到 B 网站，登录后同意给予 A 网站授权。这时，B 网站就会跳回"),t("code",[e._v("redirect_uri")]),e._v("参数指定的跳转网址，并且把令牌作为 URL 参数，传给 A 网站。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://a.com/callback#token=ACCESS_TOKEN\n")])])]),t("p",[e._v("上面 URL 中，"),t("code",[e._v("token")]),e._v("参数就是令牌，A 网站因此直接在前端拿到令牌。")]),e._v(" "),t("p",[e._v("注意，令牌的位置是 URL 锚点（fragment），而不是查询字符串（querystring），这是因为 OAuth 2.0 允许跳转网址是 HTTP 协议，因此存在“中间人攻击”的风险，而浏览器跳转时，锚点不会发到服务器，就减少了泄漏令牌的风险。")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/other/image-8dc7037e92604e468ceaa2df19310f21.png",alt:"/img/other/image-8dc7037e92604e468ceaa2df19310f21.png"}})]),e._v(" "),t("p",[e._v("image.png")]),e._v(" "),t("p",[e._v("这种方式把令牌直接传给前端，是很不安全的。因此，只能用于一些安全要求不高的场景，并且令牌的有效期必须非常短，通常就是会话期间（session）有效，浏览器关掉，令牌就失效了。")]),e._v(" "),t("h2",{attrs:{id:"密码式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#密码式"}},[e._v("#")]),e._v(" 密码式")]),e._v(" "),t("p",[t("strong",[e._v("如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为“密码式”（password）。")])]),e._v(" "),t("p",[e._v("第一步，A 网站要求用户提供 B 网站的用户名和密码。拿到以后，A 就直接向 B 请求令牌。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://oauth.b.com/token?  grant_type=password&  username=USERNAME&  password=PASSWORD&  client_id=CLIENT_ID\n")])])]),t("p",[e._v("上面 URL 中，"),t("code",[e._v("grant_type")]),e._v("参数是授权方式，这里的"),t("code",[e._v("password")]),e._v("表示“密码式”，"),t("code",[e._v("username")]),e._v("和"),t("code",[e._v("password")]),e._v("是 B 的用户名和密码。")]),e._v(" "),t("p",[e._v("第二步，B 网站验证身份通过后，直接给出令牌。注意，这时不需要跳转，而是把令牌放在 JSON 数据里面，作为 HTTP 回应，A 因此拿到令牌。")]),e._v(" "),t("p",[e._v("这种方式需要用户给出自己的用户名/密码，显然风险很大，因此只适用于其他授权方式都无法采用的情况，而且必须是用户高度信任的应用。")]),e._v(" "),t("h2",{attrs:{id:"凭证式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#凭证式"}},[e._v("#")]),e._v(" 凭证式")]),e._v(" "),t("p",[t("strong",[e._v("最后一种方式是凭证式（client credentials），适用于没有前端的命令行应用，即在命令行下请求令牌。")])]),e._v(" "),t("p",[e._v("第一步，A 应用在命令行向 B 发出请求。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://oauth.b.com/token?  grant_type=client_credentials&  client_id=CLIENT_ID&  client_secret=CLIENT_SECRET\n")])])]),t("p",[e._v("上面 URL 中，"),t("code",[e._v("grant_type")]),e._v("参数等于"),t("code",[e._v("client_credentials")]),e._v("表示采用凭证式，"),t("code",[e._v("client_id")]),e._v("和"),t("code",[e._v("client_secret")]),e._v("用来让 B 确认 A 的身份。")]),e._v(" "),t("p",[e._v("第二步，B 网站验证通过以后，直接返回令牌。")]),e._v(" "),t("p",[e._v("这种方式给出的令牌，是针对第三方应用的，而不是针对用户的，即有可能多个用户共享同一个令牌。")]),e._v(" "),t("h2",{attrs:{id:"令牌的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#令牌的使用"}},[e._v("#")]),e._v(" 令牌的使用")]),e._v(" "),t("p",[e._v("A拿到令牌后, 就可以向B的API发送请求数据了")]),e._v(" "),t("p",[e._v("此时每个发到API的请求, 都必须带有令牌. 具体做法是在请求的头信息, 加上一个"),t("code",[e._v("Authorization")]),e._v("字段, 令牌就放在这个字段里面.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('curl -H "Authorization: Bearer ACCESS_TOKEN" \\"https://api.b.com"\n')])])]),t("p",[e._v("上面命令中，"),t("code",[e._v("ACCESS_TOKEN")]),e._v("就是拿到的令牌。")]),e._v(" "),t("h2",{attrs:{id:"更新令牌"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新令牌"}},[e._v("#")]),e._v(" 更新令牌")]),e._v(" "),t("p",[e._v("令牌的有效期到了，如果让用户重新走一遍上面的流程，再申请一个新的令牌，很可能体验不好，而且也没有必要。OAuth 2.0 允许用户自动更新令牌。")]),e._v(" "),t("p",[e._v("具体方法是，B 网站颁发令牌的时候，一次性颁发两个令牌，一个用于获取数据，另一个用于获取新的令牌（refresh token 字段）。令牌到期前，用户使用 refresh token 发一个请求，去更新令牌。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("https://b.com/oauth/token?  grant_type=refresh_token&  client_id=CLIENT_ID&  client_secret=CLIENT_SECRET&  refresh_token=REFRESH_TOKEN\n")])])]),t("p",[e._v("上面 URL 中，"),t("code",[e._v("grant_type")]),e._v("参数为"),t("code",[e._v("refresh_token")]),e._v("表示要求更新令牌，"),t("code",[e._v("client_id")]),e._v("参数和"),t("code",[e._v("client_secret")]),e._v("参数用于确认身份，"),t("code",[e._v("refresh_token")]),e._v("参数就是用于更新令牌的令牌。")]),e._v(" "),t("p",[e._v("B 网站验证通过以后，就会颁发新的令牌。")])])}),[],!1,null,null,null);t.default=v.exports}}]);