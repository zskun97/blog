(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{381:function(a,e,t){"use strict";t.r(e);var s=t(3),r=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),e("h2",{attrs:{id:"docker安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[a._v("#")]),a._v(" docker安装")]),a._v(" "),e("p",[a._v("1.卸载之前的docker")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("yum remove docker \\\n           docker-client \\\n           docker-client-latest \\\n           docker-common \\\n           docker-latest \\\n           docker-latest-logrotate \\\n           docker-logrotate \\\n           docker-engine\n")])])]),e("p",[a._v("2.下载依赖包")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("yum install -y yum-utils\n")])])]),e("p",[a._v("3.设置下载地址")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),e("p",[a._v("4.安装docker")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("yum install docker-ce docker-ce-cli containerd.io\n")])])]),e("p",[a._v("5.启动docker")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("systemctl start docker\n")])])]),e("p",[a._v("6.设置开机自启")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("systemctl enable docker\n")])])]),e("p",[a._v("7.配置镜像加速")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('mkdir -p /etc/docker\n\ntee /etc/docker/daemon.json <<-\'EOF\'\n{\n  "registry-mirrors": ["https://12wwwyap.mirror.aliyuncs.com"]\n}\nEOF\n\nsystemctl daemon-reload\n\nsystemctl restart docker\n')])])]),e("h2",{attrs:{id:"docker常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker常用命令"}},[a._v("#")]),a._v(" docker常用命令")]),a._v(" "),e("h3",{attrs:{id:"获取镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取镜像"}},[a._v("#")]),a._v(" 获取镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("//搜索镜像\ndocker search ubuntu\n//从仓库拉取镜像,如果不指定版本默认下载latest版本\ndocker pull ubuntu\n")])])]),e("h3",{attrs:{id:"启动容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动容器"}},[a._v("#")]),a._v(" 启动容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it ubuntu /bin/bash\n-i: 交互式操作。\n-t: 终端。\n-d：后台运行\nubuntu: ubuntu 镜像。\n/bin/bash：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash\n")])])]),e("h3",{attrs:{id:"进入容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进入容器"}},[a._v("#")]),a._v(" 进入容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker attach id   退出终端会导致容器停止\ndocker exec -it 710 /bin/bash  进入该id容器，退出终端不会导致容器停止\n")])])]),e("h3",{attrs:{id:"管理容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理容器"}},[a._v("#")]),a._v(" 管理容器")]),a._v(" "),e("p",[a._v("docker ps 查看进程")]),a._v(" "),e("p",[a._v("docker ps -a 查看所有进程包括已停止的")]),a._v(" "),e("p",[a._v("docker start CONTAINER ID 重启这个id的容器")]),a._v(" "),e("p",[a._v("docker stop 停止某个容器")]),a._v(" "),e("p",[a._v("docker rm -f redis 删除名为“redis”的容器, -f 可以强行删除正在运行的容器")]),a._v(" "),e("p",[a._v("docker container prune 删除所有停止的容器")]),a._v(" "),e("p",[a._v("docker port id 查看该id容器的所有端口")]),a._v(" "),e("p",[a._v("docker top id 可以查看容器的进程")]),a._v(" "),e("p",[a._v("docker images 查看下载的镜像")]),a._v(" "),e("p",[a._v("docker rmi redis 删除镜像")]),a._v(" "),e("p",[a._v("docker logs -f elasticsearch 查看elasticsearch容器的日志, -f 循环输出")]),a._v(" "),e("p",[a._v("docker update redis –restart=always 容器自动启动")]),a._v(" "),e("p",[a._v("docker run -p 6379:6379 –name redis -v /mydata/redis/data:/data -v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf -d redis redis-server /etc/redis/redis.conf –requirepass “redis94264” 启动redis,并挂在相关的配置文件, 并设置密码redis94264")]),a._v(" "),e("p",[a._v("docker run -p 3306:3306 –name mysql -v /mydata/mysql/log:/var/log/mysql -v /mydata/mysql/data:/var/lib/mysql -v /mydata/mysql/conf:/etc/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7 启动mysql")]),a._v(" "),e("h3",{attrs:{id:"导出容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导出容器"}},[a._v("#")]),a._v(" 导出容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker export 1e560fca3906 > ubuntu.tar   把该容器快照导出到本地文件\n")])])]),e("h3",{attrs:{id:"导入容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入容器"}},[a._v("#")]),a._v(" 导入容器")]),a._v(" "),e("p",[a._v("可以将容器快照文件再导入成镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cat docker/ubuntu.tar | docker import - test/ubuntu:v1     从本地导入\ndocker import http://example.com/exampleimage.tgz example/imagerepo    通过url导入\n")])])]),e("h3",{attrs:{id:"保存镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保存镜像"}},[a._v("#")]),a._v(" 保存镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker save 1e560fca3906 > ubuntu.tar\n//组合保存\n\n")])])]),e("h3",{attrs:{id:"载入镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#载入镜像"}},[a._v("#")]),a._v(" 载入镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker load < ubuntu.tar\n")])])]),e("h3",{attrs:{id:"容器互联"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器互联"}},[a._v("#")]),a._v(" 容器互联")]),a._v(" "),e("p",[a._v("创建一个新的docker网络")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[root@VM-0-9-centos ~]## docker network create -d bridge test-net\n")])])]),e("p",[a._v("展示所有的docker网络")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[root@VM-0-9-centos ~]## docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\n5c7a4fccca19        bridge              bridge              local\nb49022ce4237        host                host                local\n60f9070b901a        none                null                local\nccd7f95f8b63        test-net            bridge              local\n")])])]),e("p",[a._v("创建容器时指明 –network")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[root@VM-0-9-centos ~]## docker run -itd --name net1 --network test-net net/ubuntu:v1 /bin/bash\n[root@VM-0-9-centos ~]## docker run -itd --name net2 --network test-net net/ubuntu:v1 /bin/bash\n")])])]),e("p",[a._v("这样同一个docker网络内的容器可以互联")]),a._v(" "),e("h2",{attrs:{id:"镜像操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像操作"}},[a._v("#")]),a._v(" 镜像操作")]),a._v(" "),e("h3",{attrs:{id:"镜像更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像更新"}},[a._v("#")]),a._v(" 镜像更新")]),a._v(" "),e("p",[a._v("首先需要启动一个容器,然后进入容器内")]),a._v(" "),e("p",[a._v("执行 apt-get update 更新容器, 退出容器,可以提交容器副本,commit后便会有一个新的镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('[root@VM-0-9-centos ~]## docker commit -m="test update" -a="test" ae735c1134de test/ubuntu:v2\nsha256:b52d4b375f0e765c8ee18dee0c2be0e6d49fd0b60d8b179cf42204071b90f244\n\n-m: 提交的描述信息\n\n-a: 指定镜像作者\n\ne218edb10161：容器 ID\n\nrunoob/ubuntu:v2: 指定要创建的目标镜像名\n')])])]),e("h3",{attrs:{id:"镜像创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像创建"}},[a._v("#")]),a._v(" 镜像创建")]),a._v(" "),e("p",[a._v("创建一个 Dockerfile 文件，其中包含一组指令来告诉 Docker 如何构建我们的镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('[root@VM-0-9-centos ~]## vim Dockerfile\nrunoob@runoob:~$ cat Dockerfile\nFROM    centos:6.7\nMAINTAINER      Fisher "fisher@sudops.com"\n\nRUN     /bin/echo \'root:123456\' |chpasswd\nRUN     useradd runoob\nRUN     /bin/echo \'runoob:123456\' |chpasswd\nRUN     /bin/echo -e "LANG=\\"en_US.UTF-8\\"" >/etc/default/local\nEXPOSE  22\nEXPOSE  80\nCMD     /usr/sbin/sshd -D\n')])])]),e("p",[a._v("第一条FROM，指定使用哪个镜像源")]),a._v(" "),e("p",[a._v("RUN 指令告诉docker 在镜像内执行命令，安装了什么。。。")]),a._v(" "),e("p",[a._v("docker build 进行构建")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[root@VM-0-9-centos ~]## docker build -t zsk/centos:6.7 .\n\n-t ：指定要创建的目标镜像名\n\n. ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径\n")])])]),e("h3",{attrs:{id:"更新镜像tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新镜像tag"}},[a._v("#")]),a._v(" 更新镜像tag")]),a._v(" "),e("p",[a._v("会复制一个镜像,不是覆盖原有")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[root@VM-0-9-centos ~]## docker tag 633c4e471363 zsk/centos:dev\n")])])]),e("h2",{attrs:{id:"安装实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装实例"}},[a._v("#")]),a._v(" 安装实例")]),a._v(" "),e("h3",{attrs:{id:"安装es和kibana"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装es和kibana"}},[a._v("#")]),a._v(" 安装ES和kibana")]),a._v(" "),e("h4",{attrs:{id:"下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载"}},[a._v("#")]),a._v(" 下载")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker pull elasticsearch:7.4.2\ndocker pull kibana:7.4.2\n")])])]),e("h4",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("h4",{attrs:{id:"es"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es"}},[a._v("#")]),a._v(" ES")]),a._v(" "),e("p",[a._v("在主机创建外挂目录:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('mkdir -p /mydata/elasticsearch/config\nmkdir -p /mydata/elasticsearch/data\necho "http.host: 0.0.0.0">>/mydata/elasticsearch/config/elasticsearch.yml\nchmod -R 777 /mydata/elasticsearch  //修改文件权限\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('docker run --name elasticsearch -p 9200:9200 -p 9300:9300 \\\n-e "discovery.type=single-node" \\\n-e ES_JAVA_OPTS="-Xms64m -Xmx256m" \\\n-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\\n-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /mydata/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-d elasticsearch:7.4.2\n')])])]),e("h4",{attrs:{id:"kibana"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kibana"}},[a._v("#")]),a._v(" kibana")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run --name kibana -e ELASTICSEARCH_HOSTS=http://119.45.176.143:9200 -p 5601:5601 \\\n-d kibana:7.4.2\n")])])]),e("h3",{attrs:{id:"安装nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装nginx"}},[a._v("#")]),a._v(" 安装nginx")]),a._v(" "),e("p",[a._v("现在mydata下准备一套conf (安装一套nginx骗取他的文件在清理掉, docker container cp nginx:/etc/nginx .)")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -p 80:80 --name bginx \\\n-v /mydata/nginx/html:/usr/share/nginx/html \\\n-v /mydata/nginx/logs:/var/log/nginx \\\n-v /mydata/nginx/conf:/etc/nginx \\\n-d nginx:1.10\n")])])]),e("h3",{attrs:{id:"安装rocketmq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装rocketmq"}},[a._v("#")]),a._v(" 安装RocketMQ")]),a._v(" "),e("p",[e("strong",[a._v("启动NameServer：")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -d -p 9876:9876 --name rmqserver  foxiswho/rocketmq:server-4.5.1\n")])])]),e("p",[e("strong",[a._v("启动broker：")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('docker run -d -p 10911:10911 -p 10909:10909\\\n --name rmqbroker --link rmqserver:namesrv\\\n -e "NAMESRV_ADDR=namesrv:9876" -e "JAVA_OPTS=-Duser.home=/opt"\\\n -e "JAVA_OPT_EXT=-server -Xms128m -Xmx128m"\\\n foxiswho/rocketmq:broker-4.5.1\n')])])]),e("p",[a._v("Broker容器中默认的配置文件的路径为：")]),a._v(" "),e("p",[a._v("安装后需要进入该文件添加 brokerIP1 = 192.168.53.201 不然默认是内网IP")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("/etc/rocketmq/broker.conf\n")])])]),e("p",[a._v("也可以通过-v参数指定本机的配置文件：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('docker run -d -p 10911:10911 -p 10909:10909\\ --name rmqbroker --link rmqserver:namesrv\\ -e "NAMESRV_ADDR=namesrv:9876" -e "JAVA_OPTS=-Duser.home=/opt"\\ -e "JAVA_OPT_EXT=-server -Xms128m -Xmx128m"\\ -v /conf/broker.conf:/etc/rocketmq/broker.conf \\ foxiswho/rocketmq:broker-4.5.1\n')])])]),e("p",[a._v("如果一切正常，NameServer和Broker一会儿就会安装好，为了管理上的方便，rocketmq console也是必不可少的工具了，通过上面查询的方式找到需要启动的版本，启动方式如下：")]),a._v(" "),e("p",[a._v("管理页面访问端口是 8180 ,可修改配置")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('docker run -d --name rmqconsole -p 8180:8080 --link rmqserver:namesrv\\ -e "JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876\\ -Dcom.rocketmq.sendMessageWithVIPChannel=false"\\ -t styletang/rocketmq-console-ng\n')])])]),e("p",[a._v("然后通过如下命令检查一下启动情况")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker ps|grep rocketmq\n")])])]),e("p",[a._v("结果:")])])}),[],!1,null,null,null);e.default=r.exports}}]);