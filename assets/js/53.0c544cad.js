(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{436:function(t,e,s){"use strict";s.r(e);var a=s(3),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"责任链模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#责任链模式"}},[t._v("#")]),t._v(" 责任链模式")]),t._v(" "),e("h3",{attrs:{id:"定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),e("p",[t._v("百度百科的定义: 责任链模式是一种行为模式。在责任链模式里，很多对象由每一个对象对其下家的引用而连接起来形成一条链。请求在这个链上传递，直到链上的某一个对象决定处理此请求。发出这个请求的客户端并不知道链上的哪一个对象最终处理这个请求，这使得系统可以在不影响客户端的情况下动态地重新组织和分配责任。")]),t._v(" "),e("h3",{attrs:{id:"实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),e("p",[t._v("以审批举例 审批流程分为三级, 小组领导, 部门领导, 大老板 但是根据事件的重要程度, 需要审批的人不同 普通事件小组领导审批即通过, 重要事件小组领导审批后,部门领导审批 即通过 重大事件小组领导审批后,部门领导审批, 大老板审批")]),t._v(" "),e("p",[t._v("ifelse表达代码逻辑")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//代表事件类型  普通=1 重要=2 重大=3int type;if (type>=1){    sout(部门领导审批);}if (type>=2){    sout(小组领导审批);}if(type>=3){    sout(大老板处理);}sout(处理完成);\n")])])]),e("p",[t._v("责任链模式,将每个审批动作抽取为不同的实现类,然后实现类中包含了下一步是哪个实现类处理")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class ImplA extends Service {    private Service next; //抽象类    //定义下一步    setNext(Service impl){        this.next = impl;    }    //审批动作    do(int type){        if(type>=1){            sout(小组领导审批);        }        //如果设置了下一步,则进行传递        if(next!=null){            next.do(type);        }    }}\n")])])]),e("p",[t._v("看起来可能会说和组合模式挺像啊, 当前对象包含了下一个对象;")]),t._v(" "),e("p",[t._v("组合模式描述的是对象结构, 通过当前对象包含下一步的对象,可以组成一个整体结构 ;")]),t._v(" "),e("p",[t._v("责任链是行为模式, 在组合模式的结构基础上, 行为的一级一级传递")])])}),[],!1,null,null,null);e.default=r.exports}}]);