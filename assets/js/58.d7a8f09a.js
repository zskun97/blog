(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{448:function(t,s,i){"use strict";i.r(s);var e=i(3),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[t._v("#")]),t._v(" List")]),t._v(" "),s("h1",{attrs:{id:"linkedlist一定比arraylist插入速度快吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist一定比arraylist插入速度快吗"}},[t._v("#")]),t._v(" LinkedList一定比ArrayList插入速度快吗?")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://bugstack.cn/assets/images/2020/interview/interview-9-01.png",alt:"https://bugstack.cn/assets/images/2020/interview/interview-9-01.png"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://bugstack.cn/assets/images/2020/interview/interview-9-02.png",alt:"https://bugstack.cn/assets/images/2020/interview/interview-9-02.png"}})]),t._v(" "),s("p",[s("strong",[t._v("普遍认为ArrayList是基于数组实现、LinkedList是基于双向链表实现，所以基于数据结构的不同，遍历和查找多的情况下用ArrayList、插入和删除频繁的情况下用LinkedList。")])]),t._v(" "),s("p",[t._v("由上图可知不一定, 还是看具体情况\nArrayList在头插和中间插入时 因为每次都要copy元素所以速度慢, 而尾插只在扩容时copy所以速度快")]),t._v(" "),s("p",[t._v("LinkedList每次都要创建对象, 在头插和尾插时速度都相当快, 但是中间插入时,因为首先要遍历到插入位置, 所以速度是最慢的")]),t._v(" "),s("p",[t._v("头插时: ArrayList需要做大量的位移和复制操作，而LinkedList的优势就体现出来了，耗时只是实例化一个对象")]),t._v(" "),s("p",[t._v("尾插时: ArrayList 不需要做位移拷贝也就不那么耗时了，而LinkedList则需要创建大量的对象。"),s("em",[t._v("所以数据量大时这里ArrayList尾插的效果更好一些")])]),t._v(" "),s("p",[t._v("中间插入: Linkedlist在中间插入时，遍历寻找位置还是非常耗时了")])])}),[],!1,null,null,null);s.default=r.exports}}]);