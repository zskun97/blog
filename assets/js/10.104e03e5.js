(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{324:function(a,t,e){"use strict";e.r(t);var s=e(3),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"hadoop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hadoop"}},[a._v("#")]),a._v(" hadoop")]),a._v(" "),t("h1",{attrs:{id:"zookeeper"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[a._v("#")]),a._v(" Zookeeper")]),a._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),t("p",[a._v("官方文档上这么解释zookeeper，它是一个分布式服务框架，是Apache Hadoop 的一个子项目，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，如：统一命名服务、状态同步服务、集群管理、分布式应用配置项的管理等。")]),a._v(" "),t("p",[a._v("是一种为分布式应用所设计的高可用、高性能且一致的开源协调服务,它提供了一项基本服务:分布式锁服务. 后来有摸索出其他使用方法: 配置维护、组服务、分布式消息队列、分布式通知/协调等")]),a._v(" "),t("p",[a._v("上面的解释有点抽象，简单来说zookeeper=文件系统+监听通知机制。")]),a._v(" "),t("h2",{attrs:{id:"常用操作命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用操作命令"}},[a._v("#")]),a._v(" 常用操作命令")]),a._v(" "),t("p",[a._v("docker容器进入命令行")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("docker exec -it 525 /bin/bash\ncd bin/\n./zkCli.sh\n")])])]),t("p",[a._v("help命令查看可用命令")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("    addWatch [-m mode] path # optional mode is one of [PERSISTENT, PERSISTENT_RECURSIVE] - default is PERSISTENT_RECURSIVE\n    addauth scheme auth\n    close\n    config [-c] [-w] [-s]\n    connect host:port\n    create [-s] [-e] [-c] [-t ttl] path [data] [acl]\n    delete [-v version] path\n    deleteall path [-b batch size]\n    delquota [-n|-b|-N|-B] path\n    get [-s] [-w] path\n    getAcl [-s] path\n    getAllChildrenNumber path\n    getEphemerals path\n    history\n    listquota path\n    ls [-s] [-w] [-R] path\n    printwatches on|off\n    quit\n    reconfig [-s] [-v version] [[-file path] | [-members serverID=host:port1:port2;port3[,...]*]] | [-add serverId=host:port1:port2;port3[,...]]* [-remove serverId[,...]*]\n    redo cmdno\n    removewatches path [-c|-d|-a] [-l]\n    set [-s] [-v version] path data\n    setAcl [-s] [-v version] [-R] path acl\n    setquota -n|-b|-N|-B val path\n    stat [-w] path\n    sync path\n    version\n    whoami\n\n")])])]),t("p",[a._v("常用操作:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("create [-s] [-e] path data    创建节点 存储的数据       -s指定是序列化顺序节点    -e指定是临时节点\n临时节点会话结束后自动删除, 不允许有子节点\n\nls path     查看路径下有哪些子节点\n\nget [-s] [-w] path       获取该节点数据       -s获取详细节点信息   -w获取存储的数据\n\ndelete [-v version] path  删除节点,如果有子节点则不行\n\ndeleteall path 递归删除\n\nset [-s] [-v version] path data   存储数据   -s存储后展示节点信息   -v指定版本修改,不符合提醒version No is not valid :\n\n")])])]),t("p",[a._v("get -s path")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("zsk                 //存储的数据\ncZxid = 0x5         //节点被创建的zxid\nctime = Wed Jun 16 07:11:27 UTC 2021            //节点创建的时间\nmZxid = 0x5         //节点被修改的zxid\nmtime = Wed Jun 16 07:11:27 UTC 2021            //节点被修改的时间\npZxid = 0x5          //最新修改的zxid,和mzxid一样的吧\ncversion = 0          //所拥有的的子节点被修改的版本号\ndataVersion = 0       //数据版本\naclVersion = 0              //\nephemeralOwner = 0x0      //如果是临时节点,值便是节点拥有者的会话id,否则为0\ndataLength = 3             //节点数据长度\nnumChildren = 0               //子节点数量\n\n")])])]),t("h2",{attrs:{id:"常用四字命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用四字命令"}},[a._v("#")]),a._v(" 常用四字命令")]),a._v(" "),t("p",[a._v("zookeeper支持某些特定的四字命令与其交互,大多是查询命令, 用来获取zookeeper服务的当前状态及相关信息.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n")])])]),t("h2",{attrs:{id:"api常用操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api常用操作"}},[a._v("#")]),a._v(" API常用操作")]),a._v(" "),t("h1",{attrs:{id:"hadoop-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hadoop-2"}},[a._v("#")]),a._v(" Hadoop")]),a._v(" "),t("h2",{attrs:{id:"hdfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hdfs"}},[a._v("#")]),a._v(" HDFS")])])}),[],!1,null,null,null);t.default=n.exports}}]);